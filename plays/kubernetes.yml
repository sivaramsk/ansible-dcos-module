---
- name: Install Kubernetes as a Service
  hosts: localhost
  serial: 1
  become: false
  tasks:

  - name: Connect to the cluster
    include: connection.yml

  - name: Create a group for Mesosphere Kubernetes Engine
    dcos_iam_group:
      gid: kubernetes-group
      description: Permissions for Mesosphere Kubernetes Engine
      state: present
      permissions:
        - rid: dcos:mesos:master:reservation:role:kubernetes-role
          action: create
        - rid: dcos:mesos:master:framework:role:kubernetes-role
          action: create
        - rid: dcos:mesos:master:task:user:nobody
          action: create

  - name: Create service account for Kubernetes Cluster
    dcos_iam_serviceaccount:
      sid: kubernetes
      description: 'Kubernetes Cluster Service Account'
      secret_path: kubernetes/secret
      groups: 
        - kubernetes-group
      state: present

  - name: Ensure Mesosphere Kubernetes Engine is installed
    dcos_package:
      name: kubernetes
      app_id: kubernetes
      version: "{{ mke_version }}"
      state: present
      options:
        {
          "service": {
            "service_account": "kubernetes",
            "service_account_secret": "kubernetes/secret"
          }
        }

  - name: Create a group for Kubernetes Cluster
    dcos_iam_group:
      gid: kubernetes-cluster-group
      description: Permissions for Kubernetes
      state: present
      permissions:
        - rid: dcos:mesos:master:framework:role:*
          action: read
        - rid: dcos:mesos:master:framework:role:kubernetes-cluster-role
          action: create
        - rid: dcos:mesos:master:task:user:root
          action: create
        - rid: dcos:mesos:agent:task:user:root
          action: create
        - rid: dcos:mesos:master:reservation:role:kubernetes-cluster-role
          action: create
        - rid: dcos:mesos:master:reservation:principal:kubernetes-cluster
          action: delete
        - rid: dcos:mesos:master:volume:role:kubernetes-cluster-role
          action: create
        - rid: dcos:mesos:master:volume:principal:kubernetes-cluster
          action: delete
        - rid: dcos:service:marathon:marathon:services:/
          action: create
        - rid: dcos:service:marathon:marathon:services:/
          action: delete
        - rid: dcos:secrets:default:/kubernetes-cluster/*
          action: full
        - rid: dcos:secrets:list:default:/kubernetes-cluster
          action: read
        - rid: dcos:adminrouter:ops:ca:rw
          action: full
        - rid: dcos:adminrouter:ops:ca:ro
          action: full
        - rid: dcos:mesos:master:framework:role:slave_public/kubernetes-cluster-role
          action: create
        - rid: dcos:mesos:master:framework:role:slave_public/kubernetes-cluster-role
          action: read
        - rid: dcos:mesos:master:reservation:role:slave_public/kubernetes-cluster-role
          action: create
        - rid: dcos:mesos:master:volume:role:slave_public/kubernetes-cluster-role 
          action: create
        - rid: dcos:mesos:master:framework:role:slave_public
          action: read
        - rid: dcos:mesos:agent:framework:role:slave_public
          action: read

  - name: Create service account for Kubernetes Cluster
    dcos_iam_serviceaccount:
      sid: kubernetes-cluster
      description: 'Kubernetes Cluster Service Account'
      secret_path: kubernetes-cluster/secret
      groups: 
        - kubernetes-cluster-group
      state: present

  - name: Ensure Kubernetes Cluster is installed
    dcos_package:
      name: kubernetes-cluster
      app_id: kubernetes-cluster
      version: "{{ mke_version }}"
      state: present
      options:
        {
          "service": {
            "name": "kubernetes-cluster",
            "service_account": "kubernetes-cluster",
            "service_account_secret": "kubernetes-cluster/secret",
            "use_agent_docker_certs": true
          },
          "kubernetes": {
            "authorization_mode": "RBAC", # AlwaysAllow or RBAC
            "dcos_token_authentication": true,
            "high_availability": false,
            "private_node_count": 3,
            "public_node_count": 0,
            "private_reserved_resources": {
              "kube_cpus": 2,
              "kube_mem": 5120
            }
          }
        }
